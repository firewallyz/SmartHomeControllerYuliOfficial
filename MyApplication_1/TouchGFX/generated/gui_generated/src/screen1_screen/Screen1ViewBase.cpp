/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_800X480_PUZZLE_ID));
    add(image1);

    textArea1.setXY(159, 43);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V7DU));
    add(textArea1);

    TimerMain.setXY(446, 215);
    TimerMain.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    TimerMain.setLabelText(touchgfx::TypedText(T___SINGLEUSE_PY2H));
    TimerMain.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TimerMain.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TimerMain.setAction(buttonCallback);
    add(TimerMain);

    ToggleMain.setXY(117, 215);
    ToggleMain.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    ToggleMain.setLabelText(touchgfx::TypedText(T___SINGLEUSE_1VQP));
    ToggleMain.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ToggleMain.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ToggleMain.setAction(buttonCallback);
    add(ToggleMain);
}

Screen1ViewBase::~Screen1ViewBase()
{

}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ToggleMain)
    {
        //toggleLightActionChangePage
        //When ToggleMain clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
    if (&src == &TimerMain)
    {
        //lightTimerChangePage
        //When TimerMain clicked change screen to Screen4
        //Go to Screen4 with no screen transition
        application().gotoScreen4ScreenNoTransition();
    }
}
